///////////////////////////////////////////////////////////////////////////////
//
//	Console.cpp
//
///////////////////////////////////////////////////////////////////////////////
#include "Console.h"


///////////////////////////////////////////////////////////////////////////////
//
//	Constructeur
//
///////////////////////////////////////////////////////////////////////////////
Console::Console( sc_module_name zName )
: sc_module(zName)
{
	SC_THREAD(thread);
	sensitive<< ClockPort.pos();
		
}


///////////////////////////////////////////////////////////////////////////////
//
//	Destructeur
//
///////////////////////////////////////////////////////////////////////////////
Console::~Console()
{
}


///////////////////////////////////////////////////////////////////////////////
//
//	thread
//
///////////////////////////////////////////////////////////////////////////////
void Console::thread(void)
{
	// Variable
    unsigned int uiData;
	
	// Boucle infinie
	while(1)
	{
		// On s'assure qu'une donnée est valide
		if ( Console_Enable_InPort.read() )
		{
			// Récupère la donnée
			uiData = Console_Data_InPort.read();
			
			Console_Ready_OutPort.write(true);
			// Affiche la donnée
			printf("\n\n\nConsole: %d \n\n\n", uiData);
		}
		
		// Changement de contexte
		do{
			wait();
		}while(!Console_Enable_InPort.read() );
	}
}
